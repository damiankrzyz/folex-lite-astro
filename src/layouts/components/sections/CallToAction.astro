---
import type { Section } from "@/types";
import { getEntryCTM } from "@/lib/customContentLoader.astro";
import { markdownify } from "@/lib/utils/textConverter";
import CustomButton from "@/components/CustomButton.astro";
import overrideObjects from "@/lib/utils/overrideObjects.ts";

// Type for this section data
type CallToActionType = Section & {
  title?: string;
  description?: string;
  button?: any;
  options?: {
    appearance?: "light" | "accent";
    centeredContent?: boolean;
  };
};

type Props = {
  content?: CallToActionType;
};

// Fetching the default content for the this section
let defaultContent = (
  await getEntryCTM("sections", "call-to-action", Astro.currentLocale)
)?.data as CallToActionType;

// Enables content customization with a fallback to 'defaultContent' if not provided.
let actualContent = overrideObjects(
  { ...defaultContent },
  Astro.props.content,
) as CallToActionType;

// Extracting required values from 'content' object
let { title, description, button, options, enable } = actualContent as CallToActionType;

// Don't render if disabled
if (enable === false) return null;

const appearance = options?.appearance || "light";
const centeredContent = options?.centeredContent ?? false;

const bgClass = appearance === "accent" ? "bg-primary-600" : "bg-gray-100";
const textClass = appearance === "accent" ? "text-white" : "text-gray-900";
---

<section class={`py-16 md:py-24 ${bgClass}`}>
  <div class="container">
    <div class={`mx-auto ${centeredContent ? 'max-w-3xl text-center' : 'max-w-5xl'}`}>
      <div class={`flex flex-col gap-8 ${centeredContent ? 'items-center' : 'items-start md:flex-row md:items-center md:justify-between'}`}>
        <div class={centeredContent ? 'text-center' : 'flex-1'}>
          {title && (
            <h2
              class={`mb-4 text-3xl font-bold md:text-4xl ${textClass}`}
              set:html={markdownify(title)}
            />
          )}
          {description && (
            <div
              class={`text-lg ${appearance === "accent" ? "text-white/90" : "text-gray-600"}`}
              set:html={markdownify(description)}
            />
          )}
        </div>
        {button?.enable && (
          <div class="flex-shrink-0">
            <CustomButton {...button} />
          </div>
        )}
      </div>
    </div>
  </div>
</section>
